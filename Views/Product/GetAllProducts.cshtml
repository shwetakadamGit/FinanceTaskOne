@model IEnumerable<FinanceTaskOne.Models.Products>

@{
    ViewData["Title"] = "GetAllProducts";
}
<script src="https://code.jquery.com/jquery-3.6.3.js" integrity="sha256-nQLuAZGRRcILA+6dMBOvcRh5Pe310sBpanc6+QBmyVM=" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/gh/linways/table-to-excel@v1.0.4/dist/tableToExcel.js"></script>
<script>
    $(document).ready(function () {
        $("#btnExportToExcel").click(function () {
            let table = document.getElementsByTagName("table");
            console.log(table);
            debugger;
            TableToExcel.convert(table[0], {
                name: `ProductDetails.xlsx`,
                sheet: {
                    name: 'ProductDetails'
                }
            });
        });
    });
</script>
<script>
    $(document).ready(function () {
        $("#btnExportToCSV").click(function () {
            let table = document.getElementsByTagName("table");
            let csvContent = "data:text/csv;charset=utf-8,";

            // Get all table rows
            let rows = table[0].getElementsByTagName("tr");

            // Add data rows
            for (let i = 0; i < rows.length; i++) {
                let cells = rows[i].getElementsByTagName("td");
                let rowData = [];
                for (let j = 0; j < cells.length; j++) {
                    rowData.push(`"${cells[j].innerText}"`);
                }
                let row = rowData.join(",");
                csvContent += row + "\n";
            }

            // Create a download link
            const encodedUri = encodeURI(csvContent);
            const link = document.createElement("a");
            link.setAttribute("href", encodedUri);
            link.setAttribute("download", "data.csv");
            document.body.appendChild(link);

            // Trigger the download
            link.click();
        });
    });

</script>
<h1>Product Details</h1>

<p>
    <a asp-action="AddProductItem">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.CategoryName)
            </td>
            <td>
                    <a asp-action="EditProduct" asp-route-id="@item.ProductId">Edit</a> |
                    <a asp-action="ProductDetails" asp-route-id="@item.ProductId">Details</a> |
                    <a asp-action="DeleteProduct" asp-route-id="@item.ProductId">Delete</a> |
            </td>
            
        </tr>
}
    </tbody>
</table>
<table>
<tr>
    <td>
        <button type="button" class="btn btn-primary btn-lg" id="btnExportToExcel"
                data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end"
                style="padding: 4px; margin-left: 10%;">
            Export To Excel
        </button>
    </td>
        <td>
            <button type="button" class="btn btn-primary btn-lg" id="btnExportToCSV"
                    data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end"
                    style="padding: 4px; margin-left: 40%;">
                Export To CSV
            </button>
        </td>
</tr>
</table>

